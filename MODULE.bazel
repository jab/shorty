bazel_dep(name = "rules_python", version = "0.37.2")
bazel_dep(name = "aspect_rules_py", version = "1.5.2")
bazel_dep(name = "aspect_rules_lint", version = "1.0.3")
bazel_dep(name = "rules_multitool", version = "0.13.0")
bazel_dep(name = "buildifier_prebuilt", version = "7.3.1")
bazel_dep(name = "rules_uv", version = "0.35.0")

PY_VER = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = PY_VER,
)
use_repo(python, "python_{}".format(PY_VER.replace(".", "_")))

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

[
    pip.parse(
        hub_name = "pip_{}_deps".format(i),
        python_version = PY_VER,
        requirements_lock = "//requirements:{}.txt".format(i),
    )
    for i in ("base", "test", "dev")
]

use_repo(pip, "pip_base_deps", "pip_dev_deps", "pip_test_deps")

#####################################################################################
# For linters, formatters, and other tools:
multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//tools:tools.lock.json")
use_repo(multitool, "multitool")

#####################################################################################
# For building an efficient container image:
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.16.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    # TODO: try distroless_python
    name = "ubuntu",
    digest = "sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30",
    image = "ubuntu",
    platforms = [
        "linux/amd64",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/ppc64le",
        "linux/s390x",
    ],
)
use_repo(oci, "ubuntu", "ubuntu_linux_amd64", "ubuntu_linux_arm64_v8", "ubuntu_linux_arm_v7", "ubuntu_linux_ppc64le", "ubuntu_linux_s390x")

# Depend on a hermetic cc toolchain, which is required to build a container image.
bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.0")

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains("@zig_sdk//toolchain:linux_amd64_gnu.2.31")
