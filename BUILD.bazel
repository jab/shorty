load("@pip_base_deps//:requirements.bzl", base_deps = "all_requirements")
load("@pip_test_deps//:requirements.bzl", test_deps = "all_requirements")
load("@pip_dev_deps//:requirements.bzl", dev_deps = "all_requirements")
load("@rules_python//python/entry_points:py_console_script_binary.bzl", "py_console_script_binary")

# Prefer aspect_rules_py's py_binary over rules_python's as it installs pip deps
# into a standard virtualenv that VSCode recognizes automatically.
# Caveat: aspect_rules_py's py_binary depends on a newer glibc than is available on RHEL7.
# Can switch back to rules_python's py_binary if this is an issue.
load("@aspect_rules_py//py:defs.bzl", "py_binary")
load("@aspect_rules_py//py:defs.bzl", "py_pytest_main")

# Does not work with coverage:
# load("@aspect_rules_py//py:defs.bzl", "py_test")
# ...so use rules_python's py_test rule instead:
load("@rules_python//python:py_test.bzl", "py_test")

py_binary(
    name = "app",
    srcs = ["app.py"],
    data = [":templates"],
    visibility = ["//visibility:public"],
    deps = base_deps,
)

py_binary(
    name = "app.dev",
    srcs = ["app.py"],
    data = [":templates"],
    env = {
        "FLASK_DEBUG": "1",
        "WERKZEUG_DEBUG_PIN": "off",
    },
    visibility = ["//visibility:public"],
    deps = base_deps + test_deps + dev_deps,
)

py_pytest_main(
    name = "__test__",
    deps = ["@pip_test_deps//pytest:pkg"],
)

py_test_name_by_src = {i: i.replace(".py", "") for i in glob(["*_test.py"])}

[
    py_test(
        name = name,
        timeout = "short",
        srcs = [
            "conftest.py",
            ":__test__",
            src,
        ],
        main = ":__test__.py",
        deps = [":app"] + test_deps,
    )
    for (src, name) in py_test_name_by_src.items()
]

[
    py_console_script_binary(
        name = i,
        binary_rule = py_binary,
        pkg = "@pip_base_deps//{}".format(i),
        deps = [":app"],
    )
    for i in ("flask", "hypercorn")
]

py_console_script_binary(
    name = "mypy",
    args = glob(["*.py"]),
    binary_rule = py_test,
    data = [":mypy.ini"],
    pkg = "@pip_test_deps//mypy",
    deps = [":app"] + py_test_name_by_src.values(),
)

filegroup(
    name = "templates",
    srcs = glob(["templates/*.jinja"]),
)

exports_files([
    ".ruff.toml",
    "mypy.ini",
])
