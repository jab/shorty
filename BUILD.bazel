load("@pip_base_deps//:requirements.bzl", base_deps = "all_requirements")
load("@pip_test_deps//:requirements.bzl", test_deps = "all_requirements")

# Prefer aspect_rules_py's py_binary over rules_python's as it installs pip deps
# into a standard virtualenv that VSCode recognizes automatically.
# Caveat: aspect_rules_py's py_binary depends on a newer glibc than is available on RHEL7.
# Can switch back to rules_python's py_binary if this is an issue.
load("@aspect_rules_py//py:defs.bzl", "py_binary")
load("@aspect_rules_py//py:defs.bzl", "py_pytest_main")

# Does not work with coverage:
# load("@aspect_rules_py//py:defs.bzl", "py_test")
# ...so use rules_python's py_test rule instead:
load("@rules_python//python:py_test.bzl", "py_test")
load("@rules_python//python/entry_points:py_console_script_binary.bzl", "py_console_script_binary")
load("//:py_layer.bzl", "py_oci_image")

filegroup(
    name = "templates",
    srcs = glob(["templates/*.jinja"]),
)

py_binary(
    name = "app",
    srcs = ["app.py"],
    data = [":templates"],
    deps = base_deps,
)

# https://github.com/aspect-build/rules_py/blob/main/examples/pytest/README.md
py_pytest_main(
    name = "__test__",
    deps = ["@pip_test_deps//pytest:pkg"],
)

py_test(
    name = "app_test",
    timeout = "short",
    srcs = [":__test__"] + glob(["*_test.py"]),
    main = ":__test__.py",
    deps = [":app"] + test_deps,
)

[
    py_console_script_binary(
        name = i,
        pkg = "@pip_base_deps//{}".format(i),
        deps = [":app"],
        binary_rule = py_binary,
    )
    for i in ("flask", "hypercorn")
]

py_console_script_binary(
    name = "mypy",
    pkg = "@pip_test_deps//mypy",
    data = [":mypy.ini"],
    deps = [":app", ":app_test"],
    binary_rule = py_test,
)

py_oci_image(
    name = "oci_image",
    base = "@distroless_base",
    binary = ":app",
    entrypoint = ["/app"],
)

exports_files([".ruff.toml", "mypy.ini"])
